1：命名空间
可以认为类是属于命名空间的。
如果当前项目中没有这个类的命名空间，需要我们手动的导入这个类所在的命名空间
1）鼠标直接操作
2）Alt+Shift+F110
3)记住命名空间，手动的去引用

2：在一个项目中引用另一个项目的类
1）、添加引用
2）、引用命名空间

3：值类型和引用类型
区别：
1、值类型和引用类型在内存上储存的地方不一样。
2、在传递值类型和传递引用类型的时候，传递的方式不一样
值类型我们称之为值传递，引用类型我们称之为引用传递。
我们学的值类型和引用类型：
值类型： int\double\bool\chaer\decimal\struct\enum
引用类型：string\自定义类\数组
存储：
值类型的值时存储在内存的“栈”当中
引用类型的值时存储在内存的“堆”当中

4：字符串
1）字符串的不可变性
当给一个字符串重新赋值之后，老值并没有销毁，而是重新开辟一块新得内存

当程序结束后，GC扫描整个内存，如果发现没有空间被指向，则立刻把它销毁。

2）我们可以将字符串看作时char类型得只读数组。
ToCharArray（);将字符串转换为char数组
new string(char[] chs):能够将char数组转换为字符串

5：继承
在一些类中出现一些重复的成员，就可以把这些重复的成员单独封装到一个类中，作为这些类的父类
Student、Teacher、Driver 子类 派生类
Person                   父类 基类

子类从父类继承过来了属性和方法。但子类并没有继承父类的私有字段

子类并不会继承父类的构造函数，但是子类会默认调用父类无参数的构造函数
创建父类对象，让子类可以使用父类中的成员。
所以秒如果在父类中重新写了一个有参数的构造函数之后，那个无参数的就被干掉了
子类就调用不到了，所以子类会报错。
解决办法：
1）、在父类中重新写一个无参数的构造函数。
2）、在子类中显示的调用父类的构造函数，使用关键字:base()

6：继承的特性
1、单根性：一个子类只能有一个父类。
2、传递性

7：查看类图
